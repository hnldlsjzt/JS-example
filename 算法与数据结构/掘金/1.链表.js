/*
 * @Author: 张涛
 * @Date: 2020-07-23 10:00:40
 * @LastEditTime: 2020-07-23 11:24:23
 * @Description: 
 * @FilePath: /算法与数据结构/掘金/1.链表.js
 */
// 数组和链表
//  JS中的数组未必是真正的数组

// 结论:链表的插入/删除效率高,访问效率低(因为要遍历结点),数组插入效率低,访问效率高(直接使用下标访问)

/**
 * 数组：存储在连续的内存空间中；
 * 但JS中的数组，有些不同
 * 数组中定义了不同的类型的元素，那就是非连续的内存
 */


//  线型数据结构
/**
 * 在链表中，每一个结点的结构都包含了两部分的内容：数据域和指针域（指向下一个结点）。在JS中，以嵌套对象的方式来实现
 * {
    //数据域
    val:1,
    next:{// 指针域
        val:2,
        next:{}
    }
 * }
 */

function ListNode(val) {
    this.val = val;
    this.next = null;
}